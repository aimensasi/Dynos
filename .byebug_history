c
y.events
y = Individual.find_by_id(102)
y = Individual.find_by(102)
y = individual.find_by(102)
EventsUser.find_by_user_id(102)
EventUser.find_by_user_id(102)
Event.find_by_user_id(102)
params
c
params
exit
current_user.individual.id
current_user.individual
params
c
params
c
@individual = Individual.find_by_user_id(params[:id])
Individual.new
User.find(245)
@individual = Individual.find_by(params[:id])
@individual = Individual.find_by_id(params[:id])
params
c
params
c
eventuser
n
params
exit
eventuser.save!
eventuser.save
eventuser.user_id = 0
eventuser.update(user_id: current_user.id)
eventuser.update(:user_id :current_user.id)
eventuser.user_id
current_user.id
eventuser.save!
eventuser
n
eventuser
n
eventuser
c
n
eventuser
n
c
event
eventuser
n
c
params
c
eventuser.update(user_id: current_user.id)
eventuser.update
eventuser.save
eventuser
eventuser.save
eventuser.save!
n
eventuser
n
exit
eventuser
n
EventsUser.new
transaction_params
c
transaction_params
exit
params
transaction_params
c
nonce
c
params["payment-method-nonce"]
params["payment_method_nonce"]
params
exit
session[:nonce]
session
params
nonce
params[nonce]
params[:nonce]
nonce_from_the_client = params[:nonce]
nonce_from_the_client = params[:payment_method_nonce]
params
exit
exigt
eixt
payment-method-nonce
payment-method-nonce[0]
params[:payment-method-nonce[0]]
params[:payment-method-nonce]
params[:payment_method_nonce]
params
nonce
c
@school.update_attributes school_params
@school
c
exit
@result.errors.first.message
@result.errors.first
@result.errors
@result
transaction_params
exit
params
transaction_params
exit
transaction_params
exit
transaction
transaction_params
params
